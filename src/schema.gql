# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Challenge {
  id: ID!
  title: String!
  description: String!
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ChallengePager {
  nodes: [Challenge!]
  totalCount: Int!
}

type Submission {
  id: ID!
  challengeId: ID
  repositoryUrl: URL!
  status: SubmissionStatus!
  grade: Float!
  createdAt: DateTime!
}

"""URL custom scalar type, validates input as a valid URL."""
scalar URL

"""Available submisson statuses"""
enum SubmissionStatus {
  PENDING
  ERROR
  DONE
}

type SubmissionPager {
  nodes: [Submission!]
  totalCount: Int!
}

type Query {
  challenges(offset: Int = 0, limit: Int = 10, filter: PageChallengeFilter): ChallengePager!
  submissions(offset: Int = 0, limit: Int = 10, filter: PageSubmissionFilter): SubmissionPager!
}

input PageChallengeFilter {
  title: String
  description: String
}

input PageSubmissionFilter {
  fromDate: DateTime
  toDate: DateTime
  challengeId: ID
  status: SubmissionStatus
}

type Mutation {
  createChallenge(data: CreateChallengeInput!): Challenge!
  editChallenge(data: EditChallengeInput!): Challenge!
  removeChallenge(data: RemoveChallengeInput!): Challenge!
  createSubmission(data: CreateSubmissionInput!): Submission!
}

input CreateChallengeInput {
  title: String!
  description: String!
}

input EditChallengeInput {
  id: ID!
  title: String
  description: String
}

input RemoveChallengeInput {
  id: ID!
}

input CreateSubmissionInput {
  challengeId: ID!
  repositoryUrl: URL!
}